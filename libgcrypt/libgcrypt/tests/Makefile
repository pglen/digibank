# Makefile.in generated by automake 1.9.6 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (C) 2001, 2002, 2003, 2005 Free Software Foundation, Inc.
#
# This file is part of Libgcrypt.
#
# Libgcrypt is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# Libgcrypt is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA


srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/libgcrypt
pkglibdir = $(libdir)/libgcrypt
pkgincludedir = $(includedir)/libgcrypt
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-mingw32
host_triplet = i686-pc-mingw32
LIBOBJDIR = ../compat/
EXTRA_PROGRAMS = testapi$(EXEEXT) pkbench$(EXEEXT)
noinst_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) fipsdrv$(EXEEXT) \
	rsacvt$(EXEEXT) genhashdata$(EXEEXT) gchash$(EXEEXT)
subdir = tests
DIST_COMMON = README $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/basic-disable-all-hwf.in \
	$(srcdir)/hashtest-256g.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gpg-error.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/noexecstack.m4 $(top_srcdir)/m4/onceonly.m4 \
	$(top_srcdir)/m4/socklen.m4 $(top_srcdir)/m4/sys_socket_h.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = hashtest-256g basic-disable-all-hwf
am__EXEEXT_1 = version$(EXEEXT) t-secmem$(EXEEXT) mpitests$(EXEEXT) \
	t-sexp$(EXEEXT) t-convert$(EXEEXT) t-mpi-bit$(EXEEXT) \
	t-mpi-point$(EXEEXT) curves$(EXEEXT) t-lock$(EXEEXT) \
	prime$(EXEEXT) basic$(EXEEXT) keygen$(EXEEXT) pubkey$(EXEEXT) \
	hmac$(EXEEXT) hashtest$(EXEEXT) t-kdf$(EXEEXT) \
	keygrip$(EXEEXT) fips186-dsa$(EXEEXT) aeswrap$(EXEEXT) \
	pkcs1v2$(EXEEXT) random$(EXEEXT) dsa-rfc6979$(EXEEXT) \
	t-ed25519$(EXEEXT) t-cv25519$(EXEEXT)
am__EXEEXT_2 = benchmark$(EXEEXT) bench-slope$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
aeswrap_SOURCES = aeswrap.c
aeswrap_OBJECTS = aeswrap.$(OBJEXT)
aeswrap_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = ../src/libgcrypt.la $(am__DEPENDENCIES_1) \
	../compat/libcompat.la
aeswrap_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
basic_SOURCES = basic.c
basic_OBJECTS = basic.$(OBJEXT)
basic_LDADD = $(LDADD)
basic_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
bench_slope_SOURCES = bench-slope.c
bench_slope_OBJECTS = bench-slope.$(OBJEXT)
bench_slope_LDADD = $(LDADD)
bench_slope_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
benchmark_SOURCES = benchmark.c
benchmark_OBJECTS = benchmark.$(OBJEXT)
benchmark_LDADD = $(LDADD)
benchmark_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
curves_SOURCES = curves.c
curves_OBJECTS = curves.$(OBJEXT)
curves_LDADD = $(LDADD)
curves_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
dsa_rfc6979_SOURCES = dsa-rfc6979.c
dsa_rfc6979_OBJECTS = dsa-rfc6979.$(OBJEXT)
dsa_rfc6979_LDADD = $(LDADD)
dsa_rfc6979_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
fips186_dsa_SOURCES = fips186-dsa.c
fips186_dsa_OBJECTS = fips186-dsa.$(OBJEXT)
fips186_dsa_LDADD = $(LDADD)
fips186_dsa_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
fipsdrv_SOURCES = fipsdrv.c
fipsdrv_OBJECTS = fipsdrv.$(OBJEXT)
fipsdrv_LDADD = $(LDADD)
fipsdrv_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
gchash_SOURCES = gchash.c
gchash_OBJECTS = gchash.$(OBJEXT)
gchash_LDADD = $(LDADD)
gchash_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
genhashdata_SOURCES = genhashdata.c
genhashdata_OBJECTS = genhashdata.$(OBJEXT)
genhashdata_LDADD = $(LDADD)
genhashdata_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
hashtest_SOURCES = hashtest.c
hashtest_OBJECTS = hashtest.$(OBJEXT)
hashtest_LDADD = $(LDADD)
hashtest_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
hmac_SOURCES = hmac.c
hmac_OBJECTS = hmac.$(OBJEXT)
hmac_LDADD = $(LDADD)
hmac_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
keygen_SOURCES = keygen.c
keygen_OBJECTS = keygen.$(OBJEXT)
keygen_LDADD = $(LDADD)
keygen_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
keygrip_SOURCES = keygrip.c
keygrip_OBJECTS = keygrip.$(OBJEXT)
keygrip_LDADD = $(LDADD)
keygrip_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
mpitests_SOURCES = mpitests.c
mpitests_OBJECTS = mpitests.$(OBJEXT)
mpitests_LDADD = $(LDADD)
mpitests_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
pkbench_SOURCES = pkbench.c
pkbench_OBJECTS = pkbench.$(OBJEXT)
pkbench_LDADD = $(LDADD)
pkbench_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
pkcs1v2_SOURCES = pkcs1v2.c
pkcs1v2_OBJECTS = pkcs1v2.$(OBJEXT)
pkcs1v2_LDADD = $(LDADD)
pkcs1v2_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
prime_SOURCES = prime.c
prime_OBJECTS = prime.$(OBJEXT)
prime_LDADD = $(LDADD)
prime_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
pubkey_SOURCES = pubkey.c
pubkey_OBJECTS = pubkey.$(OBJEXT)
pubkey_LDADD = $(LDADD)
pubkey_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
random_SOURCES = random.c
random_OBJECTS = random.$(OBJEXT)
random_LDADD = $(LDADD)
random_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
rsacvt_SOURCES = rsacvt.c
rsacvt_OBJECTS = rsacvt.$(OBJEXT)
rsacvt_LDADD = $(LDADD)
rsacvt_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
t_convert_SOURCES = t-convert.c
t_convert_OBJECTS = t-convert.$(OBJEXT)
t_convert_LDADD = $(LDADD)
t_convert_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
t_cv25519_SOURCES = t-cv25519.c
t_cv25519_OBJECTS = t-cv25519.$(OBJEXT)
t_cv25519_LDADD = $(LDADD)
t_cv25519_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
t_ed25519_SOURCES = t-ed25519.c
t_ed25519_OBJECTS = t-ed25519.$(OBJEXT)
t_ed25519_LDADD = $(LDADD)
t_ed25519_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
t_kdf_SOURCES = t-kdf.c
t_kdf_OBJECTS = t-kdf.$(OBJEXT)
t_kdf_LDADD = $(LDADD)
t_kdf_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
t_lock_SOURCES = t-lock.c
t_lock_OBJECTS = t_lock-t-lock.$(OBJEXT)
t_lock_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
t_mpi_bit_SOURCES = t-mpi-bit.c
t_mpi_bit_OBJECTS = t-mpi-bit.$(OBJEXT)
t_mpi_bit_LDADD = $(LDADD)
t_mpi_bit_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
t_mpi_point_SOURCES = t-mpi-point.c
t_mpi_point_OBJECTS = t-mpi-point.$(OBJEXT)
t_mpi_point_LDADD = $(LDADD)
t_mpi_point_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
t_secmem_SOURCES = t-secmem.c
t_secmem_OBJECTS = t-secmem.$(OBJEXT)
t_secmem_LDADD = $(LDADD)
t_secmem_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
t_sexp_SOURCES = t-sexp.c
t_sexp_OBJECTS = t-sexp.$(OBJEXT)
t_sexp_LDADD = $(LDADD)
t_sexp_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
testapi_SOURCES = testapi.c
testapi_OBJECTS = testapi.$(OBJEXT)
testapi_LDADD = $(LDADD)
testapi_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
version_SOURCES = version.c
version_OBJECTS = version.$(OBJEXT)
version_LDADD = $(LDADD)
version_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = aeswrap.c basic.c bench-slope.c benchmark.c curves.c \
	dsa-rfc6979.c fips186-dsa.c fipsdrv.c gchash.c genhashdata.c \
	hashtest.c hmac.c keygen.c keygrip.c mpitests.c pkbench.c \
	pkcs1v2.c prime.c pubkey.c random.c rsacvt.c t-convert.c \
	t-cv25519.c t-ed25519.c t-kdf.c t-lock.c t-mpi-bit.c \
	t-mpi-point.c t-secmem.c t-sexp.c testapi.c version.c
DIST_SOURCES = aeswrap.c basic.c bench-slope.c benchmark.c curves.c \
	dsa-rfc6979.c fips186-dsa.c fipsdrv.c gchash.c genhashdata.c \
	hashtest.c hmac.c keygen.c keygrip.c mpitests.c pkbench.c \
	pkcs1v2.c prime.c pubkey.c random.c rsacvt.c t-convert.c \
	t-cv25519.c t-ed25519.c t-kdf.c t-lock.c t-mpi-bit.c \
	t-mpi-point.c t-secmem.c t-sexp.c testapi.c version.c
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /c/develop5/digibank/libgcrypt/libgcrypt/build-aux/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /c/develop5/digibank/libgcrypt/libgcrypt/build-aux/missing --run tar
AR = ar
AS = as
AUTOCONF = ${SHELL} /c/develop5/digibank/libgcrypt/libgcrypt/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /c/develop5/digibank/libgcrypt/libgcrypt/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /c/develop5/digibank/libgcrypt/libgcrypt/build-aux/missing --run automake-1.9
AWK = gawk
BUILD_DOC_FALSE = #
BUILD_DOC_TRUE = 
BUILD_FILEVERSION = 1,8,1,62303
BUILD_REVISION = f35ff3fc
BUILD_TIMESTAMP = <none>
CC = gcc
CCAS = gcc
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CC_FOR_BUILD = gcc
CFLAGS = -g -O2 -Wall -Wcast-align -Wshadow -Wstrict-prototypes -Wformat -Wno-format-y2k -Wformat-security -W -Wextra -Wbad-function-cast -Wwrite-strings -Wdeclaration-after-statement -Wno-missing-field-initializers -Wno-sign-compare -Wpointer-arith
CPP = gcc -E
CPPFLAGS = 
CROSS_COMPILING_FALSE = 
CROSS_COMPILING_TRUE = #
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DL_LIBS = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_O_FLAG_MUNGING_FALSE = #
ENABLE_O_FLAG_MUNGING_TRUE = 
EXEEXT = .exe
FALLBACK_SOCKLEN_T = typedef int gcry_socklen_t;
FGREP = /bin/grep -F
GCRYPT_CIPHERS =  arcfour.lo blowfish.lo cast5.lo des.lo rijndael.lo rijndael-aesni.lo rijndael-padlock.lo twofish.lo serpent.lo serpent-avx2-amd64.lo rfc2268.lo seed.lo camellia.lo camellia-glue.lo camellia-aesni-avx-amd64.lo camellia-aesni-avx2-amd64.lo idea.lo salsa20.lo gost28147.lo chacha20.lo
GCRYPT_DIGESTS =  crc.lo crc-intel-pclmul.lo gostr3411-94.lo stribog.lo md4.lo md5.lo rmd160.lo sha256.lo sha512.lo keccak.lo tiger.lo whirlpool.lo blake2.lo sha1.lo
GCRYPT_HWF_MODULES = hwf-x86.lo
GCRYPT_KDFS =  scrypt.lo
GCRYPT_PUBKEY_CIPHERS =  dsa.lo rsa.lo elgamal.lo                           ecc.lo ecc-curves.lo ecc-misc.lo                           ecc-ecdsa.lo ecc-eddsa.lo ecc-gost.lo
GCRYPT_RANDOM =  rndw32.lo
GPG_ERROR_CFLAGS = -I/usr/local/include
GPG_ERROR_CONFIG = /usr/local/bin/gpg-error-config
GPG_ERROR_LIBS = -L/usr/local/lib -lgpg-error
GPG_ERROR_MT_CFLAGS = -I/usr/local/include
GPG_ERROR_MT_LIBS = -L/usr/local/lib -lgpg-error
GREP = /bin/grep
HAVE_LD_VERSION_SCRIPT_FALSE = 
HAVE_LD_VERSION_SCRIPT_TRUE = #
HAVE_W32CE_SYSTEM_FALSE = 
HAVE_W32CE_SYSTEM_TRUE = #
HAVE_W32_SYSTEM_FALSE = #
HAVE_W32_SYSTEM_TRUE = 
INSERT_SYS_SELECT_H = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LD = c:/mingw/mingw32/bin/ld.exe
LDFLAGS = 
LIBGCRYPT_CIPHERS = arcfour blowfish cast5 des aes twofish serpent rfc2268 seed camellia idea salsa20 gost28147 chacha20
LIBGCRYPT_CONFIG_API_VERSION = 1
LIBGCRYPT_CONFIG_CFLAGS = 
LIBGCRYPT_CONFIG_HOST = i686-pc-mingw32
LIBGCRYPT_CONFIG_LIBS = -lgcrypt
LIBGCRYPT_DIGESTS = crc gostr3411-94  md4 md5 rmd160 sha1 sha256 sha512 sha3 tiger whirlpool stribog blake2
LIBGCRYPT_LT_AGE = 2
LIBGCRYPT_LT_CURRENT = 22
LIBGCRYPT_LT_REVISION = 0
LIBGCRYPT_PUBKEY_CIPHERS = dsa elgamal rsa ecc
LIBGCRYPT_THREAD_MODULES = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = cp -p
LTLIBOBJS = 
MAINT = 
MAINTAINER_MODE_FALSE = #
MAINTAINER_MODE_TRUE = 
MAKEINFO = ${SHELL} /c/develop5/digibank/libgcrypt/libgcrypt/build-aux/missing --run makeinfo
MANIFEST_TOOL = :
MPI_MOD_ASM_MPIH_ADD1_FALSE = #
MPI_MOD_ASM_MPIH_ADD1_TRUE = 
MPI_MOD_ASM_MPIH_LSHIFT_FALSE = #
MPI_MOD_ASM_MPIH_LSHIFT_TRUE = 
MPI_MOD_ASM_MPIH_MUL1_FALSE = #
MPI_MOD_ASM_MPIH_MUL1_TRUE = 
MPI_MOD_ASM_MPIH_MUL2_FALSE = #
MPI_MOD_ASM_MPIH_MUL2_TRUE = 
MPI_MOD_ASM_MPIH_MUL3_FALSE = #
MPI_MOD_ASM_MPIH_MUL3_TRUE = 
MPI_MOD_ASM_MPIH_RSHIFT_FALSE = #
MPI_MOD_ASM_MPIH_RSHIFT_TRUE = 
MPI_MOD_ASM_MPIH_SUB1_FALSE = #
MPI_MOD_ASM_MPIH_SUB1_TRUE = 
MPI_MOD_ASM_UDIV_FALSE = 
MPI_MOD_ASM_UDIV_QRNND_FALSE = 
MPI_MOD_ASM_UDIV_QRNND_TRUE = #
MPI_MOD_ASM_UDIV_TRUE = #
MPI_MOD_C_MPIH_ADD1_FALSE = 
MPI_MOD_C_MPIH_ADD1_TRUE = #
MPI_MOD_C_MPIH_LSHIFT_FALSE = 
MPI_MOD_C_MPIH_LSHIFT_TRUE = #
MPI_MOD_C_MPIH_MUL1_FALSE = 
MPI_MOD_C_MPIH_MUL1_TRUE = #
MPI_MOD_C_MPIH_MUL2_FALSE = 
MPI_MOD_C_MPIH_MUL2_TRUE = #
MPI_MOD_C_MPIH_MUL3_FALSE = 
MPI_MOD_C_MPIH_MUL3_TRUE = #
MPI_MOD_C_MPIH_RSHIFT_FALSE = 
MPI_MOD_C_MPIH_RSHIFT_TRUE = #
MPI_MOD_C_MPIH_SUB1_FALSE = 
MPI_MOD_C_MPIH_SUB1_TRUE = #
MPI_MOD_C_UDIV_FALSE = 
MPI_MOD_C_UDIV_QRNND_FALSE = 
MPI_MOD_C_UDIV_QRNND_TRUE = #
MPI_MOD_C_UDIV_TRUE = #
MPI_SFLAGS = 
NM = /bin/nm -B
NMEDIT = 
NOEXECSTACK_FLAGS = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libgcrypt
PACKAGE_BUGREPORT = http://bugs.gnupg.org
PACKAGE_NAME = libgcrypt
PACKAGE_STRING = libgcrypt 1.8.1-beta15
PACKAGE_TARNAME = libgcrypt
PACKAGE_URL = 
PACKAGE_VERSION = 1.8.1-beta15
PATH_SEPARATOR = :
PTH_CFLAGS = 
PTH_CONFIG = 
PTH_LIBS = 
RANLIB = ranlib
RC = windres
RUN_LARGE_DATA_TESTS = no
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
SYSROOT = 
SYS_SOCKET_H = sys/socket.h
USE_RANDOM_DAEMON_FALSE = 
USE_RANDOM_DAEMON_TRUE = #
VERSION = 1.8.1-beta15
VERSION_NUMBER = 0x010801
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-mingw32
build_alias = 
build_cpu = i686
build_os = mingw32
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
emacs_local_vars_begin = Local Variables:
emacs_local_vars_end = End:
emacs_local_vars_read_only = buffer-read-only: t
exec_prefix = ${prefix}
host = i686-pc-mingw32
host_alias = 
host_cpu = i686
host_os = mingw32
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /c/develop5/digibank/libgcrypt/libgcrypt/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
tests_bin = \
        version t-secmem mpitests t-sexp t-convert \
	t-mpi-bit t-mpi-point curves t-lock \
	prime basic keygen pubkey hmac hashtest t-kdf keygrip \
	fips186-dsa aeswrap pkcs1v2 random dsa-rfc6979 t-ed25519 t-cv25519

tests_bin_last = benchmark bench-slope
tests_sh = basic-disable-all-hwf
tests_sh_last = hashtest-256g
TESTS = $(tests_bin) $(tests_sh) $(tests_bin_last) $(tests_sh_last)
TESTS_ENVIRONMENT = GCRYPT_IN_REGRESSION_TEST=1

# Need to include ../src in addition to top_srcdir because gcrypt.h is
# a built header.
AM_CPPFLAGS = -I../src -I$(top_srcdir)/src
AM_CFLAGS = $(GPG_ERROR_CFLAGS)
AM_LDFLAGS = -no-install
standard_ldadd = \
	../src/libgcrypt.la $(DL_LIBS) \
        ../compat/libcompat.la

noinst_HEADERS = t-common.h
EXTRA_DIST = README rsa-16k.key cavs_tests.sh cavs_driver.pl \
	     pkcs1v2-oaep.h pkcs1v2-pss.h pkcs1v2-v15c.h pkcs1v2-v15s.h \
	     t-ed25519.inp stopwatch.h hashtest-256g.in \
	     sha3-224.h sha3-256.h sha3-384.h sha3-512.h \
	     blake2b.h blake2s.h \
	     basic-disable-all-hwf.in basic_all_hwfeature_combinations.sh

LDADD = $(standard_ldadd) $(GPG_ERROR_LIBS)
t_lock_LDADD = $(standard_ldadd) $(GPG_ERROR_MT_LIBS)
t_lock_CFLAGS = $(GPG_ERROR_MT_CFLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  tests/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
hashtest-256g: $(top_builddir)/config.status $(srcdir)/hashtest-256g.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
basic-disable-all-hwf: $(top_builddir)/config.status $(srcdir)/basic-disable-all-hwf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
aeswrap$(EXEEXT): $(aeswrap_OBJECTS) $(aeswrap_DEPENDENCIES) 
	@rm -f aeswrap$(EXEEXT)
	$(LINK) $(aeswrap_LDFLAGS) $(aeswrap_OBJECTS) $(aeswrap_LDADD) $(LIBS)
basic$(EXEEXT): $(basic_OBJECTS) $(basic_DEPENDENCIES) 
	@rm -f basic$(EXEEXT)
	$(LINK) $(basic_LDFLAGS) $(basic_OBJECTS) $(basic_LDADD) $(LIBS)
bench-slope$(EXEEXT): $(bench_slope_OBJECTS) $(bench_slope_DEPENDENCIES) 
	@rm -f bench-slope$(EXEEXT)
	$(LINK) $(bench_slope_LDFLAGS) $(bench_slope_OBJECTS) $(bench_slope_LDADD) $(LIBS)
benchmark$(EXEEXT): $(benchmark_OBJECTS) $(benchmark_DEPENDENCIES) 
	@rm -f benchmark$(EXEEXT)
	$(LINK) $(benchmark_LDFLAGS) $(benchmark_OBJECTS) $(benchmark_LDADD) $(LIBS)
curves$(EXEEXT): $(curves_OBJECTS) $(curves_DEPENDENCIES) 
	@rm -f curves$(EXEEXT)
	$(LINK) $(curves_LDFLAGS) $(curves_OBJECTS) $(curves_LDADD) $(LIBS)
dsa-rfc6979$(EXEEXT): $(dsa_rfc6979_OBJECTS) $(dsa_rfc6979_DEPENDENCIES) 
	@rm -f dsa-rfc6979$(EXEEXT)
	$(LINK) $(dsa_rfc6979_LDFLAGS) $(dsa_rfc6979_OBJECTS) $(dsa_rfc6979_LDADD) $(LIBS)
fips186-dsa$(EXEEXT): $(fips186_dsa_OBJECTS) $(fips186_dsa_DEPENDENCIES) 
	@rm -f fips186-dsa$(EXEEXT)
	$(LINK) $(fips186_dsa_LDFLAGS) $(fips186_dsa_OBJECTS) $(fips186_dsa_LDADD) $(LIBS)
fipsdrv$(EXEEXT): $(fipsdrv_OBJECTS) $(fipsdrv_DEPENDENCIES) 
	@rm -f fipsdrv$(EXEEXT)
	$(LINK) $(fipsdrv_LDFLAGS) $(fipsdrv_OBJECTS) $(fipsdrv_LDADD) $(LIBS)
gchash$(EXEEXT): $(gchash_OBJECTS) $(gchash_DEPENDENCIES) 
	@rm -f gchash$(EXEEXT)
	$(LINK) $(gchash_LDFLAGS) $(gchash_OBJECTS) $(gchash_LDADD) $(LIBS)
genhashdata$(EXEEXT): $(genhashdata_OBJECTS) $(genhashdata_DEPENDENCIES) 
	@rm -f genhashdata$(EXEEXT)
	$(LINK) $(genhashdata_LDFLAGS) $(genhashdata_OBJECTS) $(genhashdata_LDADD) $(LIBS)
hashtest$(EXEEXT): $(hashtest_OBJECTS) $(hashtest_DEPENDENCIES) 
	@rm -f hashtest$(EXEEXT)
	$(LINK) $(hashtest_LDFLAGS) $(hashtest_OBJECTS) $(hashtest_LDADD) $(LIBS)
hmac$(EXEEXT): $(hmac_OBJECTS) $(hmac_DEPENDENCIES) 
	@rm -f hmac$(EXEEXT)
	$(LINK) $(hmac_LDFLAGS) $(hmac_OBJECTS) $(hmac_LDADD) $(LIBS)
keygen$(EXEEXT): $(keygen_OBJECTS) $(keygen_DEPENDENCIES) 
	@rm -f keygen$(EXEEXT)
	$(LINK) $(keygen_LDFLAGS) $(keygen_OBJECTS) $(keygen_LDADD) $(LIBS)
keygrip$(EXEEXT): $(keygrip_OBJECTS) $(keygrip_DEPENDENCIES) 
	@rm -f keygrip$(EXEEXT)
	$(LINK) $(keygrip_LDFLAGS) $(keygrip_OBJECTS) $(keygrip_LDADD) $(LIBS)
mpitests$(EXEEXT): $(mpitests_OBJECTS) $(mpitests_DEPENDENCIES) 
	@rm -f mpitests$(EXEEXT)
	$(LINK) $(mpitests_LDFLAGS) $(mpitests_OBJECTS) $(mpitests_LDADD) $(LIBS)
pkbench$(EXEEXT): $(pkbench_OBJECTS) $(pkbench_DEPENDENCIES) 
	@rm -f pkbench$(EXEEXT)
	$(LINK) $(pkbench_LDFLAGS) $(pkbench_OBJECTS) $(pkbench_LDADD) $(LIBS)
pkcs1v2$(EXEEXT): $(pkcs1v2_OBJECTS) $(pkcs1v2_DEPENDENCIES) 
	@rm -f pkcs1v2$(EXEEXT)
	$(LINK) $(pkcs1v2_LDFLAGS) $(pkcs1v2_OBJECTS) $(pkcs1v2_LDADD) $(LIBS)
prime$(EXEEXT): $(prime_OBJECTS) $(prime_DEPENDENCIES) 
	@rm -f prime$(EXEEXT)
	$(LINK) $(prime_LDFLAGS) $(prime_OBJECTS) $(prime_LDADD) $(LIBS)
pubkey$(EXEEXT): $(pubkey_OBJECTS) $(pubkey_DEPENDENCIES) 
	@rm -f pubkey$(EXEEXT)
	$(LINK) $(pubkey_LDFLAGS) $(pubkey_OBJECTS) $(pubkey_LDADD) $(LIBS)
random$(EXEEXT): $(random_OBJECTS) $(random_DEPENDENCIES) 
	@rm -f random$(EXEEXT)
	$(LINK) $(random_LDFLAGS) $(random_OBJECTS) $(random_LDADD) $(LIBS)
rsacvt$(EXEEXT): $(rsacvt_OBJECTS) $(rsacvt_DEPENDENCIES) 
	@rm -f rsacvt$(EXEEXT)
	$(LINK) $(rsacvt_LDFLAGS) $(rsacvt_OBJECTS) $(rsacvt_LDADD) $(LIBS)
t-convert$(EXEEXT): $(t_convert_OBJECTS) $(t_convert_DEPENDENCIES) 
	@rm -f t-convert$(EXEEXT)
	$(LINK) $(t_convert_LDFLAGS) $(t_convert_OBJECTS) $(t_convert_LDADD) $(LIBS)
t-cv25519$(EXEEXT): $(t_cv25519_OBJECTS) $(t_cv25519_DEPENDENCIES) 
	@rm -f t-cv25519$(EXEEXT)
	$(LINK) $(t_cv25519_LDFLAGS) $(t_cv25519_OBJECTS) $(t_cv25519_LDADD) $(LIBS)
t-ed25519$(EXEEXT): $(t_ed25519_OBJECTS) $(t_ed25519_DEPENDENCIES) 
	@rm -f t-ed25519$(EXEEXT)
	$(LINK) $(t_ed25519_LDFLAGS) $(t_ed25519_OBJECTS) $(t_ed25519_LDADD) $(LIBS)
t-kdf$(EXEEXT): $(t_kdf_OBJECTS) $(t_kdf_DEPENDENCIES) 
	@rm -f t-kdf$(EXEEXT)
	$(LINK) $(t_kdf_LDFLAGS) $(t_kdf_OBJECTS) $(t_kdf_LDADD) $(LIBS)
t-lock$(EXEEXT): $(t_lock_OBJECTS) $(t_lock_DEPENDENCIES) 
	@rm -f t-lock$(EXEEXT)
	$(LINK) $(t_lock_LDFLAGS) $(t_lock_OBJECTS) $(t_lock_LDADD) $(LIBS)
t-mpi-bit$(EXEEXT): $(t_mpi_bit_OBJECTS) $(t_mpi_bit_DEPENDENCIES) 
	@rm -f t-mpi-bit$(EXEEXT)
	$(LINK) $(t_mpi_bit_LDFLAGS) $(t_mpi_bit_OBJECTS) $(t_mpi_bit_LDADD) $(LIBS)
t-mpi-point$(EXEEXT): $(t_mpi_point_OBJECTS) $(t_mpi_point_DEPENDENCIES) 
	@rm -f t-mpi-point$(EXEEXT)
	$(LINK) $(t_mpi_point_LDFLAGS) $(t_mpi_point_OBJECTS) $(t_mpi_point_LDADD) $(LIBS)
t-secmem$(EXEEXT): $(t_secmem_OBJECTS) $(t_secmem_DEPENDENCIES) 
	@rm -f t-secmem$(EXEEXT)
	$(LINK) $(t_secmem_LDFLAGS) $(t_secmem_OBJECTS) $(t_secmem_LDADD) $(LIBS)
t-sexp$(EXEEXT): $(t_sexp_OBJECTS) $(t_sexp_DEPENDENCIES) 
	@rm -f t-sexp$(EXEEXT)
	$(LINK) $(t_sexp_LDFLAGS) $(t_sexp_OBJECTS) $(t_sexp_LDADD) $(LIBS)
testapi$(EXEEXT): $(testapi_OBJECTS) $(testapi_DEPENDENCIES) 
	@rm -f testapi$(EXEEXT)
	$(LINK) $(testapi_LDFLAGS) $(testapi_OBJECTS) $(testapi_LDADD) $(LIBS)
version$(EXEEXT): $(version_OBJECTS) $(version_DEPENDENCIES) 
	@rm -f version$(EXEEXT)
	$(LINK) $(version_LDFLAGS) $(version_OBJECTS) $(version_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/aeswrap.Po
include ./$(DEPDIR)/basic.Po
include ./$(DEPDIR)/bench-slope.Po
include ./$(DEPDIR)/benchmark.Po
include ./$(DEPDIR)/curves.Po
include ./$(DEPDIR)/dsa-rfc6979.Po
include ./$(DEPDIR)/fips186-dsa.Po
include ./$(DEPDIR)/fipsdrv.Po
include ./$(DEPDIR)/gchash.Po
include ./$(DEPDIR)/genhashdata.Po
include ./$(DEPDIR)/hashtest.Po
include ./$(DEPDIR)/hmac.Po
include ./$(DEPDIR)/keygen.Po
include ./$(DEPDIR)/keygrip.Po
include ./$(DEPDIR)/mpitests.Po
include ./$(DEPDIR)/pkbench.Po
include ./$(DEPDIR)/pkcs1v2.Po
include ./$(DEPDIR)/prime.Po
include ./$(DEPDIR)/pubkey.Po
include ./$(DEPDIR)/random.Po
include ./$(DEPDIR)/rsacvt.Po
include ./$(DEPDIR)/t-convert.Po
include ./$(DEPDIR)/t-cv25519.Po
include ./$(DEPDIR)/t-ed25519.Po
include ./$(DEPDIR)/t-kdf.Po
include ./$(DEPDIR)/t-mpi-bit.Po
include ./$(DEPDIR)/t-mpi-point.Po
include ./$(DEPDIR)/t-secmem.Po
include ./$(DEPDIR)/t-sexp.Po
include ./$(DEPDIR)/t_lock-t-lock.Po
include ./$(DEPDIR)/testapi.Po
include ./$(DEPDIR)/version.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

t_lock-t-lock.o: t-lock.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(t_lock_CFLAGS) $(CFLAGS) -MT t_lock-t-lock.o -MD -MP -MF "$(DEPDIR)/t_lock-t-lock.Tpo" -c -o t_lock-t-lock.o `test -f 't-lock.c' || echo '$(srcdir)/'`t-lock.c; \
	then mv -f "$(DEPDIR)/t_lock-t-lock.Tpo" "$(DEPDIR)/t_lock-t-lock.Po"; else rm -f "$(DEPDIR)/t_lock-t-lock.Tpo"; exit 1; fi
#	source='t-lock.c' object='t_lock-t-lock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(t_lock_CFLAGS) $(CFLAGS) -c -o t_lock-t-lock.o `test -f 't-lock.c' || echo '$(srcdir)/'`t-lock.c

t_lock-t-lock.obj: t-lock.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(t_lock_CFLAGS) $(CFLAGS) -MT t_lock-t-lock.obj -MD -MP -MF "$(DEPDIR)/t_lock-t-lock.Tpo" -c -o t_lock-t-lock.obj `if test -f 't-lock.c'; then $(CYGPATH_W) 't-lock.c'; else $(CYGPATH_W) '$(srcdir)/t-lock.c'; fi`; \
	then mv -f "$(DEPDIR)/t_lock-t-lock.Tpo" "$(DEPDIR)/t_lock-t-lock.Po"; else rm -f "$(DEPDIR)/t_lock-t-lock.Tpo"; exit 1; fi
#	source='t-lock.c' object='t_lock-t-lock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(t_lock_CFLAGS) $(CFLAGS) -c -o t_lock-t-lock.obj `if test -f 't-lock.c'; then $(CYGPATH_W) 't-lock.c'; else $(CYGPATH_W) '$(srcdir)/t-lock.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-generic clean-libtool clean-noinstPROGRAMS ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am


# Force sequential run of some tests.
bench-slope.log:    benchmark.log
hashtest-256g.log:  bench-slope.log
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
